@use './var' as v

/* responsive */
=respond-to($media)
  @media #{$media}
    @content

=sp()
  +respond-to(v.$sp-size)
    @content
=sPc()
  +respond-to(v.$pc-l-size)
    @content

=hover()
  @media (hover: hover) and (pointer: fine)
    @content


/* font */
=calc-font-size($fontSzie: 1px, $CanvasSize: 1000)
  font-size: calc(100 / $CanvasSize) * calc($fontSzie / ($fontSzie * 0 + 1px)) * 1vw

=calc-line-height($fontSzie, $lineHeight)
  line-height: calc($lineHeight / $fontSzie)

=calc-letter-spacing($tracking)
  letter-spacing: calc($tracking / 100 * 1em)

=font($fontSize: 1, $letter-spacing: auto, $font-family: auto)
  font-size: calc($fontSize * 1px)
  line-height: 1.6
  font-weight: 400
  font-family: "garamond-atf-text", "jpSB", serif
  font-style: normal
  +calc-letter-spacing($letter-spacing)

/* leyout */
=flex($align-items: center, $justify-content: center, $flex-direction: row)
  display: flex
  @if $align-items == sta
    align-items: flex-start
  @else if $align-items == end
    align-items: flex-end
  @else if $align-items == cen
    align-items: center
  @else
    align-items: $align-items
  @if $justify-content == sta
    justify-content: flex-start
  @else if $justify-content == end
    justify-content: flex-end
  @else if $justify-content == cen
    justify-content: center
  @else if $justify-content == bet
    justify-content: space-between
  @else
    justify-content: $justify-content
  @if $flex-direction == col
    flex-direction: column
  @else if $flex-direction == colRev
    flex-direction: column-reverse
  @else if $flex-direction == rowRev
    flex-direction: row-reverse
  @else
    flex-direction: $flex-direction

=grid($grid-template-columns: 1fr, $grid-auto-rows: 1fr, $column-gap: 0, $row-gap: 0)
  display: grid
  grid-template-columns: $grid-template-columns
  grid-auto-rows: $grid-auto-rows
  column-gap: $column-gap
  row-gap: $row-gap

/* size */
=size($width: 100%, $height: 100%)
  width: $width
  height: $height

/* margin padding */
=mt($prop: auto)
  margin-top: $prop

=mr($prop: auto)
  margin-right: $prop

=mb($prop: auto)
  margin-bottom: $prop

=ml($prop: auto)
  margin-left: $prop

=pt($prop: auto)
  padding-top: $prop

=pr($prop: auto)
  padding-right: $prop

=pb($prop: auto)
  padding-bottom: $prop

=pl($prop: auto)
  padding-left: $prop

/* others */
=line-clamp($lines, $width: 100%)
  display: -webkit-box
  -webkit-box-orient: vertical
  -webkit-line-clamp: $lines
  overflow: hidden
  width: $width

=noSc
  -ms-overflow-style: none
  scrollbar-width: none
  &::-webkit-scrollbar
    display: none

=bg($color)
  background-color: $color

=tra($property, $duration, $delay, $ease)
  @if $property == auto
    transition-property: transform
  @else
    transition-property: $property
  @if $duration == auto
    transition-duration: 1.2s
  @else
    transition-duration: $duration
  @if $delay == auto
    transition-delay: 0s
  @else
    transition-delay: $delay
  @if $ease == auto
    // transition-timing-function: cubic-bezier(.12,.88,.32,.99)
    transition-timing-function: ease-out
  @else
    transition-timing-function: $ease

=no-scrollbar
  overflow: auto
  -ms-overflow-style: none
  scrollbar-width: none
  &::-webkit-scrollbar
    width: 0
    height: 0
    background: transparent